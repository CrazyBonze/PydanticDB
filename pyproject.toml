[tool.poetry]
name = "pydanticdb"
version = "0.1.0"
description = ""
authors = ["Michael Taylor <90michaeltaylor@gmail.com>"]
readme = "README.md"
repository = "https://github.com/CrazyBonze/PydanticDB"
homepage = "https://github.com/CrazyBonze/PydanticDB"

[tool.poetry.dependencies]
python = "^3.10"
tinydb = "^4.7.1"
pydantic = "^1.10.7"


[tool.poetry.group.dev.dependencies]
black = "^23.1.0"
ruff = "^0.0.259"
isort = "^5.12.0"
poethepoet = "^0.19.0"
pytest = "^7.2.2"
pytest-cov = "^4.0.0"

[tool.poe.tasks]

        [tool.poe.tasks.format-isort]
        help = "Run isort on the code base"
        cmd  = "isort ."

        [tool.poe.tasks.format-black]
        help = "Run black on the code base"
        cmd  = "black ."

        [tool.poe.tasks.format]
        help = "Run formating tools on the code base"
        sequence  = ["format-isort", "format-black"]

        [tool.poe.tasks.test]
        help = "Run unit and feature tests"
        cmd  = "pytest --cov=pydanticdb"

        [tool.poe.tasks.clean]
        help = "Remove generated files"
        cmd  = """
        rm -rf .coverage
                .mypy_cache
                .pytest_cache
                ./**/__pycache__
        """

[tool.isort]
profile = "black"

[tool.black]
color = true
line-length = 120
target-version = ['py310']

[tool.ruff]
# Enable pycodestyle (`E`) and Pyflakes (`F`) codes by default.
select = ["E", "F"]
ignore = []

# Allow autofix for all enabled rules (when `--fix`) is provided.
fixable = ["A", "B", "C", "D", "E", "F"]
unfixable = []

# Exclude a variety of commonly ignored directories.
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".hg",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "venv",
]

# Same as Black.
line-length = 88

# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

# Assume Python 3.10.
target-version = "py310"

[tool.ruff.mccabe]
# Unlike Flake8, default to a complexity level of 10.
max-complexity = 10

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
